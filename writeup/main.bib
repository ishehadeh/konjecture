@book{albertLessonsPlayIntroduction2007,
  title = {Lessons in Play: An Introduction to Combinatorial Game Theory},
  shorttitle = {Lessons in Play},
  author = {Albert, Michael H. and Nowakowski, Richard J. and Wolfe, David},
  year = {2007},
  publisher = {AK Peters},
  address = {Wellesley, Mass},
  isbn = {978-1-56881-277-9},
  lccn = {QA269 .A425 2007},
  keywords = {Combinatorial analysis,Game theory,Textbooks},
  annotation = {OCLC: ocm74941836},
  file = {/home/ian/Zotero/storage/DSV2XW3F/Albert et al. - 2007 - Lessons in play an introduction to combinatorial game theory.pdf}
}

@article{bradfordAutomatedConjecturingII2020,
  title = {Automated {{Conjecturing II}}: {{Chomp}} and {{Reasoned Game Play}}},
  shorttitle = {Automated {{Conjecturing II}}},
  author = {Bradford, Alexander and Day, J. Kain and Hutchinson, Laura and Kaperick, Bryan and Larson, Craig and Mills, Matthew and Muncy, David and Van Cleemput, Nico},
  year = {2020},
  month = jun,
  journal = {Journal of Artificial Intelligence Research},
  volume = {68},
  pages = {447--461},
  issn = {1076-9757},
  doi = {10.1613/jair.1.12188},
  urldate = {2024-10-31},
  abstract = {We demonstrate the use of a program that generates conjectures about positions of the combinatorial game Chomp---explanations of why certain moves are bad. These could be used in the design of a Chomp-playing program that gives reasons for its moves. We prove one of these Chomp conjectures---demonstrating that our conjecturing program can produce genuine Chomp knowledge.  The conjectures are generated by a general purpose conjecturing program that was previously and successfully used to generate mathematical conjectures. Our program is initialized with Chomp invariants and example game boards---the conjectures take the form of invariant-relation statements interpreted to be true for all board positions of a certain kind. The conjectures describe a theory of Chomp positions.  The program uses limited, natural input and suggests how theories generated on-the-fly might be used in a variety of situations where decisions---based on reasons---are required.},
  file = {/home/ian/Zotero/storage/9U5X3RT5/Bradford et al. - 2020 - Automated Conjecturing II Chomp and Reasoned Game Play.pdf}
}

@misc{cleemputNvcleempConjecturing2024,
  title = {Nvcleemp/Conjecturing},
  author = {Cleemput, Nico Van},
  year = {2024},
  month = nov,
  urldate = {2024-11-12},
  abstract = {Adding conjecturing to Sage}
}

@article{ernstPlayingKonaneMathematically1995,
  title = {Playing {{Konane}} Mathematically: {{A}} Combinatorial Game-Theoretic Analysis},
  shorttitle = {Playing {{Konane}} Mathematically},
  author = {Ernst, Michael},
  year = {1995},
  journal = {UMAP Journal},
  volume = {16},
  pages = {95--121},
  file = {/home/ian/Zotero/storage/BLA2JVTL/Ernst - 1995 - Playing Konane mathematically A combinatorial game-theoretic analysis.pdf;/home/ian/Zotero/storage/R7S8MXCZ/playing-konane-mathematically-combinatorial-game-theoretic-analysis.html}
}

@article{fajtlowiczConjecturesGraffiti1988,
  title = {On Conjectures of {{Graffiti}}},
  author = {Fajtlowicz, Siemion},
  year = {1988},
  month = dec,
  journal = {Discrete Mathematics},
  volume = {72},
  number = {1-3},
  pages = {113--118},
  issn = {0012365X},
  doi = {10.1016/0012-365X(88)90199-9},
  urldate = {2024-10-31},
  abstract = {Semantic Scholar extracted view of "On conjectures of Graffiti" by S. Fajtlowicz},
  copyright = {https://www.elsevier.com/tdm/userlicense/1.0/},
  langid = {english},
  file = {/home/ian/Zotero/storage/BE4UI2UN/Full Text.pdf}
}

@misc{FunctionDescriptions,
  title = {Function Descriptions},
  urldate = {2024-11-05},
  howpublished = {http://programming.sirrida.de/perm\_fn.html\#bit\_permute\_step},
  file = {/home/ian/Zotero/storage/5VJ5FYCR/perm_fn.html}
}

@incollection{hearnAmazonsKonaneCross2009,
  title = {Amazons, {{Konane}}, and {{Cross Purposes}} Are {{PSPACE-complete}}},
  booktitle = {Games of {{No Chance}} 3},
  author = {Hearn, Robert A.},
  editor = {Albert, Michael H. and Nowakowski, Richard J.},
  year = {2009},
  series = {Mathematical {{Sciences Research Institute Publications}}},
  pages = {287--306},
  publisher = {Cambridge University Press},
  address = {Cambridge},
  doi = {10.1017/CBO9780511807251.015},
  urldate = {2024-11-13},
  abstract = {Abstract. Amazons is a board game which combines elements of Chess and Go. It has become popular in recent years, and has served as a useful platform for both game-theoretic study and AI games research. Buro showed that simple Amazons endgames are NP-equivalent, leaving the complexity of the general case as an open problem.Konane is an ancient Hawaiian game, with moves similar to peg solitaire. Konane has received some attention in the combinatorial game theory community, with game values determined for many small positions and one-dimensional positions. However, its general complexity seems not to have been previously addressed.Cross Purposes was invented by Michael Albert, and named by Richard Guy at the Games at Dalhousie III workshop, in 2004. It is played on a Go board. Cross Purposes is a kind of two-player version of the popular puzzle Tipover: it represents stacks of crates tipping over and blocking others from tipping over.We show that generalized versions of these games are PSPACE-complete. We give similar reductions to each game from one of the PSPACE-complete two-player formula games described by Schaefer. Our construction also provides an alternate proof that simple Amazons endgames are NP-equivalent.IntroductionCombinatorial game theory is concerned with the attempt to find and analyze winning strategies for combinatorial games, or for tractable families of game positions.},
  isbn = {978-0-521-86134-2},
  file = {/home/ian/Zotero/storage/XGL8EJYD/Hearn - 2009 - Amazons, Konane, and Cross Purposes are PSPACE-complete.pdf;/home/ian/Zotero/storage/V6Q74F49/34C3DEE174282CB57F9AA01251C7C8AC.html}
}

@article{larsonAutomatedConjecturingFajtlowiczs2016,
  title = {Automated Conjecturing {{I}}: {{Fajtlowicz}}'s {{Dalmatian}} Heuristic Revisited},
  shorttitle = {Automated Conjecturing {{I}}},
  author = {Larson, C.E. and Van Cleemput, N.},
  year = {2016},
  month = feb,
  journal = {Artificial Intelligence},
  volume = {231},
  pages = {17--38},
  issn = {00043702},
  doi = {10.1016/j.artint.2015.10.002},
  urldate = {2024-10-31},
  abstract = {We discuss a new implementation of, and new experiments with, Fajtlowicz's Dalmatian conjecture-making heuristic. Our program makes conjectures about relations of real number invariants of mathematical objects. Conjectures in matrix theory, number theory, and graph theory are reported, together with an experiment in using conjectures to automate game play. The program can be used in a way that, by design, advances mathematical research. These experiments suggest that automated conjecture-making can be a useful ability in the design of machines that can perform a variety of tasks that require intelligence.},
  langid = {english},
  file = {/home/ian/Zotero/storage/RBHFLZES/Larson and Van Cleemput - 2016 - Automated conjecturing I Fajtlowicz's Dalmatian heuristic revisited.pdf}
}

@article{larsonAutomatedConjecturingIII2017,
  title = {Automated Conjecturing {{III}}},
  author = {Larson, C. E. and Van Cleemput, N.},
  year = {2017},
  month = dec,
  journal = {Annals of Mathematics and Artificial Intelligence},
  volume = {81},
  number = {3},
  pages = {315--327},
  issn = {1573-7470},
  doi = {10.1007/s10472-017-9559-5},
  urldate = {2024-11-12},
  abstract = {Discovery in mathematics is a prototypical intelligent behavior, and an early and continuing goal of artificial intelligence research. We present a heuristic for producing mathematical conjectures of a certain typical form and demonstrate its utility. Our program conjectures relations that hold between properties of objects (property-relation conjectures). These objects can be of a wide variety of types. The statements are true for all objects known to the program, and are the simplest statements which are true of all these objects. The examples here include new conjectures for the hamiltonicity of a graph, a well-studied property of graphs. While our motivation and experiments have been to produce mathematical conjectures---and to contribute to mathematical research---other kinds of interesting property-relation conjectures can be imagined, and this research may be more generally applicable to the development of intelligent machinery.},
  langid = {english},
  keywords = {05-04,05C45,05C69,Artificial Intelligence,Automated conjecturing,Automated mathematical discovery,Property-relations conjectures}
}

@misc{maciosowskiCombinatorialGameTheory2024,
  title = {Combinatorial {{Game Theory Library}} in {{Rust}}},
  author = {Maciosowski, Tomasz},
  year = {2024},
  month = dec,
  urldate = {2024-12-15},
  abstract = {Combinatorial Game Theory toolkit},
  copyright = {AGPL-3.0}
}

@incollection{nowakowski1xnKonaneSummary2010,
  title = {1xn {{Konane}}: {{A Summary}} of {{Results}}},
  booktitle = {Games of No Chance [2] {{More}} Games of No Chance},
  year = {2010},
  series = {Games of No Chance},
  edition = {1. paperback ed},
  number = {2},
  pages = {331--339},
  publisher = {Cambridge Univ. Press},
  address = {Cambridge [u.a.]},
  collaborator = {Nowakowski, Richard J. and Albert, Michael Henry and Chan, Alice and Tsai, Alice},
  isbn = {978-0-521-15563-2},
  langid = {english},
  annotation = {OCLC: 1075890982},
  file = {/home/ian/Zotero/storage/WES8LVV6/Nowakowski et al. - 2010 - 1xn Konane A Summary of Results.pdf}
}

@book{nowakowskiGamesNoChance2010,
  title = {Games of No Chance [2] {{More}} Games of No Chance},
  year = {2010},
  edition = {1. paperback ed},
  publisher = {Cambridge Univ. Press},
  address = {Cambridge [u.a.]},
  collaborator = {Nowakowski, Richard J. and Albert, Michael Henry},
  isbn = {978-0-521-15563-2},
  langid = {english},
  annotation = {OCLC: 1075890982}
}

@misc{ProjectJupyter,
  title = {Project {{Jupyter}}},
  urldate = {2024-12-15},
  abstract = {The Jupyter Notebook is a web-based interactive computing platform. The notebook combines live code, equations, narrative text, visualizations, interactive dashboards and other media.},
  howpublished = {https://jupyter.org},
  langid = {english},
  file = {/home/ian/Zotero/storage/5CQLJ8K7/jupyter.org.html}
}

@misc{RayonrsRayon2024,
  title = {Rayon-Rs/Rayon},
  year = {2024},
  month = dec,
  urldate = {2024-12-15},
  abstract = {Rayon: A data parallelism library for Rust},
  copyright = {Apache-2.0},
  howpublished = {rayon-rs}
}

@article{santosKonaneHasInfinite2008,
  title = {Konane Has Infinite Nim-Dimension},
  author = {Santos, Carlos and Silva, Jorge-Nuno},
  year = {2008},
  month = jan,
  journal = {Integers [electronic only]},
  volume = {1},
  abstract = {Berlekamp asked the question ``What is the habitat of *2?'' We generalize this to ask: For a game G, what is the largest n such that *n is a position in G? and answer this for konane by presenting a method to construct any nimber.},
  file = {/home/ian/Zotero/storage/4DK6U9KM/Full Text.pdf}
}

@misc{saysEfficientBitPermutation2014,
  title = {Efficient Bit Permutation Using Delta Swaps},
  author = {Says, Bouanto},
  year = {2014},
  month = may,
  journal = {Reflections on Security},
  urldate = {2024-11-05},
  abstract = {A common operation in cryptographic block cipher algorithms is to shuffle the input bits in some specified way. While such bit permutations are easy to do in hardware, they tend to be difficult to {\dots}},
  langid = {english},
  file = {/home/ian/Zotero/storage/M9VFA82U/efficient-bit-permutation-using-delta-swaps.html}
}

@article{schaefferCheckersSolved2007,
  title = {Checkers {{Is Solved}}},
  author = {Schaeffer, Jonathan and Bj{\"o}rnsson, Yngvi and Kishimoto, Akihiro and M{\"u}ller, Martin and Lake, Robert and Lu, Paul and Sutphen, Steve},
  year = {2007},
  month = oct,
  journal = {Science},
  volume = {317},
  pages = {1518--1522},
  doi = {10.1126/science.1144079},
  abstract = {The game of checkers has roughly 500 billion billion possible positions (5 {\texttimes} 1020). The task of solving the game, determining the final result in a game with no mistakes made by either player, is daunting. Since 1989, almost continuously, dozens of computers have been working on solving checkers, applying state-of-the-art artificial intelligence techniques to the proving process. This paper announces that checkers is now solved: Perfect play by both sides leads to a draw. This is the most challenging popular game to be solved to date, roughly one million times as complex as Connect Four. Artificial intelligence technology has been used to generate strong heuristic-based game-playing programs, such as Deep Blue for chess. Solving a game takes this to the next level by replacing the heuristics with perfection.},
  file = {/home/ian/Zotero/storage/PCP2CV6S/Schaeffer et al. - 2007 - Checkers Is Solved.pdf}
}

@inproceedings{thompsonTeachingNeuralNetwork2005,
  title = {Teaching a {{Neural Network}} to {{Play Konane}}},
  author = {Thompson, D.},
  year = {2005},
  urldate = {2024-11-26},
  abstract = {A common approach to game playing in Artificial Intelligence involves the use of the Minimax algorithm and a static evaluation function. In this work I investigated using neural networks to replace hand-tuned static evaluation functions. Networks were also trained to evaluate board positions to greater depth levels using Minimax. The networks begin as a random networks and by playing against a random player, the networks are able to match the teacher's performance. This work provides evidence that board representation affects the ability of the network to evaluate Konane board positions. Networks that are taught to output a real-value board evaluation outperform those taught to directly compare two boards after a considerable amount of training. However, the latter networks show more consistent behavior during training, and quickly learn to play at a reasonably good skill level.},
  file = {/home/ian/Zotero/storage/2KGJZCKJ/Thompson - 2005 - Teaching a Neural Network to Play Konane.pdf}
}

@article{zaechLeadershipStartups2017,
  title = {Leadership in Start-Ups},
  author = {Zaech, Simon and Baldegger, Urs},
  year = {2017},
  month = feb,
  journal = {International Small Business Journal},
  volume = {35},
  pages = {026624261667688},
  doi = {10.1177/0266242616676883},
  abstract = {This article explores the role of leadership in start-ups and outlines a model of when, why and how leadership behaviour of founder-CEOs influences start-up performance. The model has been tested using a sample of 102 start-ups and their founder-CEOs and includes feedback from 372 employees, rating their leadership behaviour of founder-CEOs. The results indicate that transformational leadership has a significant and positive effect on start-up performance. However, no significant, direct effects on start-up performance were found for transactional leadership or laissez-faire leadership. Furthermore, the size of the start-up has a significant, positive, moderating effect on the relationship between laissez-faire leadership and start-up performance, as well as a significant, positive, moderating effect on the relationship between the transactional leadership dimension, management by exception and start-up performance. Results indicate that for start-ups and their performance, leadership behaviour is as important as their context. Today, leadership is neglected by most entrepreneurs and is not considered a motivation for founding a business. The results show that founders should focus more on leadership behaviour.}
}
